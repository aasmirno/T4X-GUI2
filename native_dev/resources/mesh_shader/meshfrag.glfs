// mesh fragment shader
#version 420 core

uniform sampler2D image_texture;

// lighting
uniform float ambient_strength;
uniform vec3 light_location;

uniform mat4 view;                  // variable view matrix
uniform mat4 projection;            // variable projection matrix

in vec2 color_coord;                // texture coord
in vec4 patch_normal;               // patch face normal
in vec4 FragPos;                    // frag position

out vec4 frag_color;

void main()
{
    vec4 light_pos = vec4(light_location, 1.0);
    vec4 lightDir = normalize(light_pos - FragPos);

    float diff = max( -dot(patch_normal, lightDir), 0.0 );

    vec4 diffuse = diff * vec4(1.0, 1.0, 1.0, 1.0);
    vec4 ambient = ambient_strength * vec4(1.0, 1.0, 1.0, 1.0);

    vec4 color = (ambient + diffuse) * texture(image_texture, color_coord);
    frag_color = color + vec4(0.0, 0.0, 0.0, 1.0);
}